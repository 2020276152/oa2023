package com.powernode.crm.workbench.mapper;

import com.powernode.crm.workbench.model.Activity;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

@Repository
public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbg.generated Sun Jun 11 19:33:59 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbg.generated Sun Jun 11 19:33:59 CST 2023
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbg.generated Sun Jun 11 19:33:59 CST 2023
     */
    int updateByPrimaryKeySelective(Activity row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbg.generated Sun Jun 11 19:33:59 CST 2023
     */
    int updateByPrimaryKey(Activity activity);

    /**
     * 插入市场活动信息（动态sql）
     * @param activity
     * @return
     */
    int insertActivitySelective(Activity activity);

    /**
     * 插入市场活动信息
     * @param row
     * @return
     */
    int insertActivity(Activity row);

    /**
     * 根据条件分页查询市场活动列表
     * @param map
     * @return
     */
    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询，返回符合条件的市场活动的总记录条数
     * @param map
     * @return
     */
    int selectCountOfActivityByCondition(Map<String,Object> map);

    /**
     * 根据市场活动id批量删除市场活动信息
     * @param ids
     * @return
     */
    int deleteActivityByIds(String[] ids);

    /**
     * 根据市场活动id修改市场活动信息
     * @param activity
     * @return
     */
    int updateActivityById(Activity activity);

    /**
     * 查询所有的市场活动
     * @return
     */
    List<Activity> selectAllActivities();

    /**
     * 根据市场活动id，批量查询市场活动
     * @param ids
     * @return
     */
    List<Activity> selectActivities(String[] ids);

    /**
     * excel文件上传，批量插入市场活动
     * @param activityList
     * @return
     */
    int insertActivitiesByList(List<Activity> activityList);

    /**
     * 根据id查询市场活动，查询市场活动明细
     * @param id
     * @return
     */
    Activity selectActivityForDetail(String id);

    /**
     * 查询线索关联的市场活动信息
     * @param id
     * @return
     */
    List<Activity> selectActivityForClueDetailByClueId(String id);

    /**
     *根据市场活动名称 以及 已经被关联的市场活动的id 查询市场活动信息
     */
    List<Activity> selectActivityForAssociation(Map<String,Object> map);

    List<Activity> selectActivityForDetailByIs(String[] ids);

}